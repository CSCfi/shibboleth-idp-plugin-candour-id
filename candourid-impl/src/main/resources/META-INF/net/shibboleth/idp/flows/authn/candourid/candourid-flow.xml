<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.springframework.org/schema/webflow http://www.springframework.org/schema/webflow/spring-webflow.xsd"
      parent="authn.abstract">

    <action-state id="Start">
        <evaluate expression="InitializeCandourContext" />
        <evaluate expression="FlowStartPopulateAuditContext" />
        <evaluate expression="WriteAuditLog" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="AuthnRequest" />
    </action-state>
    
    <view-state id="AuthnRequest"
        view="externalRedirect:#{flowRequestContext.getFlowScope().get('authenticationUri')}">
        <attribute name="csrf_excluded" value="true" type="boolean" />
        <on-render>
            <evaluate
                expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(fi.csc.shibboleth.plugin.candourid.context.CandourContext)).setCallbackUri(flowExecutionUrl + '&amp;_eventId_proceed=1')" />
            <evaluate expression="CreateSession" />
            <evaluate expression="opensamlProfileRequestContext.getSubcontext(T(net.shibboleth.idp.authn.context.AuthenticationContext)).getSubcontext(T(fi.csc.shibboleth.plugin.candourid.context.CandourContext)).getAuthenticationUri()" result="flowScope.authenticationUri" />
        </on-render>
        <transition to="ExtractAuthenticationResponse" />
    </view-state>
    
    <action-state id="ExtractAuthenticationResponse">
        <evaluate expression="ExtractAuthenticationResponse" />
        <evaluate expression="GetUserClaims" />
        <evaluate expression="'proceed'" />
        <transition on="proceed" to="FinalizeResponse" />
    </action-state>
    
    <action-state id="FinalizeResponse">
       <evaluate expression="ValidateAuthentication" />
       <evaluate expression="PopulateSubjectCanonicalizationContext" />
       <evaluate expression="WriteAuditLog" />
       <evaluate expression="'proceed'" />        
       <transition on="proceed" to="CallSubjectCanonicalization" />   
    </action-state>

    <!-- Call the c14n subflow here, and allow an error to trigger a flow reselect. -->
    <subflow-state id="CallSubjectCanonicalization" subflow="c14n">
        <input name="calledAsSubflow" value="true" />
        <transition on="proceed" to="proceed" />

        <transition on="SubjectCanonicalizationError" to="ReselectFlow" />
    </subflow-state>

    <global-transitions>        
        <!-- Route everything out as a graceful failure to allow subsequent options to run. -->
        <transition on="#{!'proceed'.equals(currentEvent.id)}" to="ReselectFlow">           
           <evaluate expression="WriteAuditLogInTransition"/>
           <evaluate expression="T(org.opensaml.core.metrics.MetricsSupport).getMetricRegistry().counter('fi.csc.shibboleth.plugin.candourid.failures').inc()" />
        </transition>
    </global-transitions>

    <bean-import resource="candourid-beans.xml" />
</flow>